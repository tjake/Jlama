syntax = "proto3";
option java_multiple_files = true;
package com.github.tjake.jlama.net;

message CombineRequest {
  bytes workerid = 1;
  bytes uuid = 2;
  int32 layer = 3;
  repeated bytes tensor = 6;
}

message TensorData {
  int32 dim0 = 1; // Rows
  int32 dim1 = 2; // Columns
  int32 columnOffset = 3; // Offset into the column (if sparse)
  int32 columnLength = 4; // Length of the column (if sparse)
  bytes data = 5;
}

message CombineResponse {
  repeated bytes tensor = 3;
}

message GenerateRequest {
  bytes workerid = 1;
  bytes session = 2;
  bytes tensor = 3;
}

message GenerateResponse {
  bytes session = 1;
  int32 token = 2;
  int32 position = 3;
}

/**
 * Register a worker with the server
 */
message RegisterRequest {
  bytes workerid = 1;
}

message RegisterResponse {
  int32 modelShard = 1;
  int32 numModelShards = 2;
  int32 layerShard = 3;
  int32 numLayerShards = 4;
}

service JlamaService {
  rpc register(RegisterRequest) returns (RegisterResponse);
  rpc generate(stream GenerateRequest) returns (stream GenerateResponse);
  rpc combine(stream CombineRequest) returns (stream CombineResponse);
}